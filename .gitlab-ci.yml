#.ssh: &ssh
#  before_script:
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - echo "HostKeyAlgorithms +ssh-rsa" >> ~/.ssh/config
#    - echo "PubkeyAcceptedKeyTypes +ssh-rsa" >> ~/.ssh/config
#    - eval $(ssh-agent -s)
#    - echo "$SSH_KEY" | ssh-add -
#
#.docker_login: &docker_login
#  before_script:
#    - echo "$CI_JOB_TOKEN" | docker login -u "gitlab-ci-token" --password-stdin $CI_REGISTRY
#
#variables:
#  CI_PHP_IMAGE_DEPLOY_TAG: $CI_REGISTRY_IMAGE/php/deploy:$CI_COMMIT_SHA
#
#stages:
#  - build
#  - test
#  - deploy
#
#workflow:
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'main'
#    - if: $CI_MERGE_REQUEST_IID
#    - if: $CI_COMMIT_TAG
#
#build:
#  stage: build
#  image: docker:latest
#  #https://stackoverflow.com/questions/51196435/gitlab-ci-docker-command-not-found/65855484#65855484
#  services:
#    - docker:dind
#  variables:
#    DOCKER_DRIVER: overlay2
#    DOCKER_TLS_CERTDIR: "/certs"
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'schedule'
#      when: never
#    - if: $CI_MERGE_REQUEST_IID
#    - if: $CI_COMMIT_TAG
#    - if: $CI_COMMIT_BRANCH == 'main'
#      when: manual
#  <<: *docker_login
#  script:
#    - docker build . --target deploy -t $CI_PHP_IMAGE_DEPLOY_TAG
#    - docker push $CI_PHP_IMAGE_DEPLOY_TAG
#
#deploy to production:
#  stage: deploy
#  image: $CI_PHP_IMAGE_DEPLOY_TAG
#  variables:
#    GIT_STRATEGY: none
#    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: 0
#  environment:
#    name: production
#    url: https://robertvanlienden.nl/
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'schedule'
#      when: never
#    - if: $CI_COMMIT_BRANCH == 'main'
#  <<: *ssh
#  script:
#    - cd /app
#    - echo "Deploying to production"
#    - php deployer.phar --version
#    - php deployer.phar deploy --revision $CI_COMMIT_SHA -vv
